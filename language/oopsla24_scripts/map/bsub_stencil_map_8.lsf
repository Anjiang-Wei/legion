#!/bin/bash
#BSUB -alloc_flags atsdisable

n=$(( ($LSB_DJOB_NUMPROC - 1) / 40))
numgpus=4

echo Num nodes: $numnodes
echo Job id: $LSB_JOBID

module load gcc/7.3.1
module load cmake/3.14.5
module load cuda/11.7.0

root_dir="$PWD"
export LD_LIBRARY_PATH="$PWD"

repeat=5

run() {
  local nx=$1;
  local ny=$2;
  local nox=$5;
  local noy=$6;
  local tile=$7;

  local oricmd=" -tsteps 50 -tprune 30 -hl:sched 1024 -ll:gpu ${numgpus} -ll:util 1 -ll:bgwork 2 -ll:csize 150000 -ll:fsize 15000 -ll:zsize 2048 -ll:rsize 512 -ll:gsize 0 -level 5 -dm:replicate 1 -dm:same_address_space -dm:memoize -lg:no_fence_elision -lg:parallel_replay 2 "
  local mapcmd=$oricmd" -blockmapper ${nox} "

  local logori=$oricmd" -wrapper -level mapper=debug -logfile wrapper_${nx}_${ny}_${nox}_${noy}_n%.wrapper -lg:prof ${n} -lg:prof_logfile prof_${nx}_${ny}_${nox}_${noy}_n%.gz "
  local logmap=$mapcmd" -wrapper -level mapper=debug -logfile wrapper_${nx}_${ny}_${nox}_${noy}_m%.wrapper -lg:prof ${n} -lg:prof_logfile prof_${nx}_${ny}_${nox}_${noy}_m%.gz "


  if [[ ! -d map_${n}_${nx}_${ny} ]]; then mkdir map_${n}_${nx}_${ny}; fi
  pushd map_${n}_${nx}_${ny}

  jsrun -b none -c ALL_CPUS -g ALL_GPUS -r 1 -n $n "$root_dir/stencil"  -nx $(( nx * ${tile} )) -ny $(( ny * ${tile} )) -ntx ${nox} -nty ${noy} $logori
  jsrun -b none -c ALL_CPUS -g ALL_GPUS -r 1 -n $n "$root_dir/stencil"  -nx $(( nx * ${tile} )) -ny $(( ny * ${tile} )) -ntx ${nox} -nty ${noy} $logmap
  for (( r=1; r <= ${repeat}; r++)); do
    echo "Running ${nx}_${ny}_r${r}"
    jsrun -b none -c ALL_CPUS -g ALL_GPUS -r 1 -n $n "$root_dir/stencil"  -nx $(( nx * ${tile} )) -ny $(( ny * ${tile} )) -ntx ${nox} -nty ${noy} $oricmd | tee out_${nx}_${ny}_${nox}_${noy}_ori_r${r}.log
    jsrun -b none -c ALL_CPUS -g ALL_GPUS -r 1 -n $n "$root_dir/stencil"  -nx $(( nx * ${tile} )) -ny $(( ny * ${tile} )) -ntx ${nox} -nty ${noy} $mapcmd | tee out_${nx}_${ny}_${nox}_${noy}_map_r${r}.log
  done

  popd
}

# 1250 * 1250 * 256 = 10000 * 10000 * 4
# run nx ny ncx ncy nox noy tile
run 16 16 8 4 4 8 1250
run 32 8 8 4 8 4 1250
run 64 4 8 4 16 2 1250
